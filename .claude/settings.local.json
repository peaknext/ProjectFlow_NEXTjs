{
  "permissions": {
    "allow": [
      "Bash(if [ -d \"old_project\" ])",
      "Bash(then echo \"old_project exists\")",
      "Bash(fi)",
      "Bash(if [ -d \"migration_plan\" ])",
      "Bash(then echo \"migration_plan exists\")",
      "Bash(if [ -d \".claude/context\" ])",
      "Bash(then echo \".claude/context exists\")",
      "Bash(else echo \".claude/context does not exist\")",
      "Bash(if [ -d \"migration_plan/scripts\" ])",
      "Bash(then echo \"exists\")",
      "Bash(else mkdir -p \"migration_plan/scripts\")",
      "Bash(node -e \"const data = require(''./migration_data.json''); const user = data.users[0]; console.log(''All fields in first user:''); Object.keys(user).forEach(key => { const val = user[key]; const display = typeof val === ''string'' && val.length > 50 ? val.substring(0,50)+''...'' : val; console.log(''  '' + key + '':'', display); });\")",
      "Bash(node migration_plan/scripts/verify-migration.js)",
      "Bash(if [ -d \"src\" ])",
      "Bash(then echo \"src exists\")",
      "Bash(else mkdir -p src)",
      "Bash(mkdir -p src/app/api/auth/login)",
      "Bash(mkdir -p src/app/api/auth/logout)",
      "Bash(mkdir -p src/app/api/auth/register)",
      "Bash(mkdir -p src/app/api/auth/verify-email)",
      "Bash(mkdir -p src/app/api/auth/reset-password)",
      "Bash(mkdir -p src/app/api/users)",
      "Bash(mkdir -p src/app/api/users/me)",
      "Bash(mkdir -p src/app/api/projects)",
      "Bash(mkdir -p src/app/api/tasks)",
      "Bash(mkdir -p src/lib)",
      "Bash(npm install)",
      "Bash(npx shadcn@latest init -y)",
      "Bash(npm install -D tailwindcss postcss autoprefixer)",
      "Bash(npx tailwindcss init -p)",
      "Bash(npx shadcn@latest init --defaults)",
      "Bash(npx shadcn@latest add button dialog input select textarea popover dropdown-menu table card badge avatar calendar sheet tabs scroll-area command form)",
      "Bash(npm install -D @tailwindcss/postcss)",
      "Bash(npm run dev)",
      "Bash(taskkill /F /PID 134976)",
      "Bash(npm uninstall tailwindcss @tailwindcss/postcss)",
      "Bash(npm install -D tailwindcss@^3 postcss autoprefixer)",
      "Bash(if [ -d \".next\" ])",
      "Bash(then rm -rf .next)",
      "Bash(else echo \".next not found\")"
    ],
    "deny": [],
    "ask": []
  }
}
